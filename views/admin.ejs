<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel - TipLiga v2.0</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
</head>
<body class="bg-gray-100 min-h-screen">
    <!-- Header -->
    <header class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-4">
                    <a href="/" class="text-2xl font-bold text-gray-900">üèÜ TipLiga</a>
                    <span class="px-3 py-1 text-sm bg-green-100 text-green-800 rounded-full font-medium">Admin Panel</span>
                </div>
                
                <div class="flex items-center space-x-4">
                    <div class="flex items-center space-x-3">
                        <% if (user.avatar_url) { %>
                            <img src="<%= user.avatar_url %>" alt="Avatar" class="w-8 h-8 rounded-full">
                        <% } %>
                        <span class="text-sm font-medium text-gray-700"><%= user.username %></span>
                        <a href="/" class="text-sm text-blue-600 hover:text-blue-800">Zpƒõt na hlavn√≠ str√°nku</a>
                        <a href="/logout" class="text-sm text-red-600 hover:text-red-800">Odhl√°sit</a>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Stats Overview -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-lg shadow p-6">
                <div class="text-2xl font-bold text-blue-600"><%= stats.total_predictions %></div>
                <div class="text-sm text-gray-600">Celkem tip≈Ø</div>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <div class="text-2xl font-bold text-green-600"><%= stats.total_users %></div>
                <div class="text-sm text-gray-600">Aktivn√≠ch u≈æivatel≈Ø</div>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <div class="text-2xl font-bold text-purple-600" data-stat="total-matches"><%= stats.total_matches %></div>
                <div class="text-sm text-gray-600">Celkem z√°pas≈Ø</div>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <div class="text-2xl font-bold text-orange-600"><%= stats.accuracy %>%</div>
                <div class="text-sm text-gray-600">√öspƒõ≈°nost tip≈Ø</div>
            </div>
        </div>

        <!-- Add New Match -->
        <div class="bg-white rounded-lg shadow mb-8" x-data="{ 
            showForm: false,
            loading: false,
            async createMatch() {
                this.loading = true;
                try {
                    const formData = new FormData(this.$refs.matchForm);
                    const response = await fetch('/admin/matches', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            teamA: formData.get('teamA'),
                            teamB: formData.get('teamB'),
                            matchTime: formData.get('matchTime')
                        })
                    });
                    
                    const result = await response.json();
                    if (result.success) {
                        this.$dispatch('show-success', 'Z√°pas byl √∫spƒõ≈°nƒõ vytvo≈ôen!');
                        this.$refs.matchForm.reset();
                        this.showForm = false;

                        // Add new match to the table
                        this.addMatchToTable(result.match);

                        // Update stats
                        this.updateStatsAfterCreate();
                    } else {
                        this.$dispatch('show-error', 'Chyba: ' + result.error);
                    }
                } catch (error) {
                    this.$dispatch('show-error', 'Chyba p≈ôi vytv√°≈ôen√≠ z√°pasu');
                } finally {
                    this.loading = false;
                }
            },

            addMatchToTable(match) {
                const tbody = document.querySelector('tbody');
                if (!tbody) return;

                const newRow = document.createElement('tr');
                newRow.setAttribute('data-match-id', match.id);
                newRow.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm font-medium text-gray-900" data-field="match-name">
                            ${match.team_a} vs ${match.team_b}
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" data-field="match-time">
                        ${new Date(match.match_time).toLocaleString('cs-CZ')}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                            upcoming
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        0 tip≈Ø
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <span class="text-gray-400">Nenastaveno</span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div class="flex space-x-2">
                            <button onclick="editMatch(${match.id}, '${match.team_a}', '${match.team_b}', '${new Date(match.match_time).toISOString().slice(0, 16)}')"
                                    class="text-blue-600 hover:text-blue-900 text-xs">
                                ‚úèÔ∏è Upravit
                            </button>
                            <button onclick="deleteMatch(${match.id}, '${match.team_a}', '${match.team_b}')"
                                    class="text-red-600 hover:text-red-900 text-xs">
                                üóëÔ∏è Smazat
                            </button>
                            <div class="border-l pl-2 ml-2 flex space-x-1">
                                <button onclick="setResult('${match.team_a}')"
                                        class="text-blue-600 hover:text-blue-900 text-xs">
                                    üèÜ ${match.team_a}
                                </button>
                                <button onclick="setResult('${match.team_b}')"
                                        class="text-red-600 hover:text-red-900 text-xs">
                                    üèÜ ${match.team_b}
                                </button>
                            </div>
                        </div>
                    </td>
                `;

                // Add with animation
                newRow.style.opacity = '0';
                newRow.style.transform = 'translateY(-20px)';
                tbody.appendChild(newRow);

                setTimeout(() => {
                    newRow.style.transition = 'all 0.3s ease-out';
                    newRow.style.opacity = '1';
                    newRow.style.transform = 'translateY(0)';
                }, 100);
            },

            updateStatsAfterCreate() {
                const totalMatchesElement = document.querySelector('[data-stat="total-matches"]');
                if (totalMatchesElement) {
                    const currentCount = parseInt(totalMatchesElement.textContent);
                    totalMatchesElement.textContent = currentCount + 1;
                }
            }
        }">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-semibold text-gray-900">Spr√°va z√°pas≈Ø</h2>
                    <button @click="showForm = !showForm" 
                            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        <span x-text="showForm ? 'Zru≈°it' : 'P≈ôidat z√°pas'"></span>
                    </button>
                </div>
                
                <div x-show="showForm" x-transition class="mb-6 p-4 bg-gray-50 rounded-lg">
                    <form x-ref="matchForm" @submit.prevent="createMatch()" class="grid grid-cols-1 md:grid-cols-4 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">T√Ωm A</label>
                            <input type="text" name="teamA" required 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">T√Ωm B</label>
                            <input type="text" name="teamB" required 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">ƒåas z√°pasu</label>
                            <input type="datetime-local" name="matchTime" required 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div class="flex items-end">
                            <button type="submit" :disabled="loading"
                                    class="w-full bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors disabled:opacity-50">
                                <span x-text="loading ? 'Vytv√°≈ôen√≠...' : 'Vytvo≈ôit z√°pas'"></span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Matches Management -->
        <div class="bg-white rounded-lg shadow mb-8">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">V≈°echny z√°pasy</h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Z√°pas</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ƒåas</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tipy</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">V√Ωsledek</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Akce</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% matches.forEach(match => { %>
                                <tr data-match-id="<%= match.id %>" x-data="{
                                    loading: false,
                                    async setResult(winner) {
                                        this.loading = true;
                                        try {
                                            const response = await fetch(`/admin/matches/<%= match.id %>/result`, {
                                                method: 'POST',
                                                headers: { 'Content-Type': 'application/json' },
                                                body: JSON.stringify({ winner })
                                            });

                                            const result = await response.json();
                                            if (result.success) {
                                                this.$dispatch('show-success', 'V√Ωsledek byl √∫spƒõ≈°nƒõ nastaven!');

                                                // Update the result column and status
                                                const matchRow = this.$el.closest('tr');
                                                const resultCell = matchRow.querySelector('[data-field="result"]');
                                                const statusCell = matchRow.querySelector('[data-field="status"]');
                                                const actionsCell = matchRow.querySelector('[data-field="actions"]');

                                                if (resultCell) {
                                                    resultCell.innerHTML = `<span class="font-medium text-green-600">${winner}</span>`;
                                                }

                                                if (statusCell) {
                                                    statusCell.innerHTML = `<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">finished</span>`;
                                                }

                                                // Remove set result buttons
                                                if (actionsCell) {
                                                    const resultButtons = actionsCell.querySelector('.border-l');
                                                    if (resultButtons) {
                                                        resultButtons.remove();
                                                    }
                                                }
                                            } else {
                                                this.$dispatch('show-error', 'Chyba: ' + result.error);
                                            }
                                        } catch (error) {
                                            this.$dispatch('show-error', 'Chyba p≈ôi nastavov√°n√≠ v√Ωsledku');
                                        } finally {
                                            this.loading = false;
                                        }
                                    },

                                    async resetResult(matchId, teamA, teamB) {
                                        if (!confirm(`Are you sure you want to reset the result for ${teamA} vs ${teamB}? This will remove the winner and reset all points for this match.`)) {
                                            return;
                                        }

                                        this.loading = true;
                                        try {
                                            const response = await fetch(`/admin/matches/${matchId}/reset`, {
                                                method: 'POST',
                                                headers: { 'Content-Type': 'application/json' }
                                            });

                                            if (response.ok) {
                                                this.$dispatch('show-success', 'Match result reset successfully! You can now set a new winner.');

                                                // Refresh the page to update the action buttons properly
                                                setTimeout(() => {
                                                    window.location.reload();
                                                }, 1500);
                                            } else {
                                                this.$dispatch('show-error', 'Error resetting match result');
                                            }
                                        } catch (error) {
                                            this.$dispatch('show-error', 'Error resetting match result');
                                        } finally {
                                            this.loading = false;
                                        }
                                    },

                                    editMatch(id, teamA, teamB, matchTime) {
                                        // Set edit modal data
                                        this.$dispatch('open-edit-modal', {
                                            id: id,
                                            teamA: teamA,
                                            teamB: teamB,
                                            matchTime: matchTime
                                        });
                                    },
                                    async updateMatch(id, teamA, teamB, matchTime) {
                                        this.loading = true;
                                        try {
                                            const response = await fetch(`/admin/matches/${id}`, {
                                                method: 'PUT',
                                                headers: { 'Content-Type': 'application/json' },
                                                body: JSON.stringify({ teamA, teamB, matchTime })
                                            });

                                            const result = await response.json();
                                            if (result.success) {
                                                alert('Z√°pas byl upraven!');
                                                location.reload();
                                            } else {
                                                alert('Chyba: ' + result.error);
                                            }
                                        } catch (error) {
                                            alert('Chyba p≈ôi √∫pravƒõ z√°pasu');
                                        } finally {
                                            this.loading = false;
                                        }
                                    },
                                    deleteMatch(id, teamA, teamB) {
                                        // Set delete modal data
                                        this.$dispatch('open-delete-modal', {
                                            id: id,
                                            teamA: teamA,
                                            teamB: teamB
                                        });
                                    },
                                    async performDelete(id) {
                                        this.loading = true;
                                        try {
                                            const response = await fetch(`/admin/matches/${id}`, {
                                                method: 'DELETE'
                                            });

                                            const result = await response.json();
                                            if (result.success) {
                                                this.$dispatch('show-success', 'Z√°pas byl √∫spƒõ≈°nƒõ smaz√°n!');
                                                setTimeout(() => location.reload(), 1500);
                                            } else {
                                                this.$dispatch('show-error', 'Chyba: ' + result.error);
                                            }
                                        } catch (error) {
                                            this.$dispatch('show-error', 'Chyba p≈ôi maz√°n√≠ z√°pasu');
                                        } finally {
                                            this.loading = false;
                                        }
                                    }
                                }">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900" data-field="match-name">
                                            <%= match.team_a %> vs <%= match.team_b %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" data-field="match-time">
                                        <%= new Date(match.match_time).toLocaleString('cs-CZ') %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap" data-field="status">
                                        <%
                                            const now = new Date();
                                            const matchDate = new Date(match.match_time);
                                            const oneHourBefore = matchDate.getTime() - (60 * 60 * 1000);
                                            let displayStatus = match.status;
                                            let statusClass = 'bg-gray-100 text-gray-800';

                                            if (match.status === 'finished') {
                                                displayStatus = 'finished';
                                                statusClass = 'bg-green-100 text-green-800';
                                            } else if (now.getTime() >= matchDate.getTime()) {
                                                displayStatus = 'live';
                                                statusClass = 'bg-red-100 text-red-800';
                                            } else if (now.getTime() >= oneHourBefore) {
                                                displayStatus = 'locked';
                                                statusClass = 'bg-orange-100 text-orange-800';
                                            } else {
                                                displayStatus = 'upcoming';
                                                statusClass = 'bg-yellow-100 text-yellow-800';
                                            }
                                        %>
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= statusClass %>">
                                            <%= displayStatus %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= match.total_predictions %> tip≈Ø
                                        <% if (match.total_predictions > 0) { %>
                                            <br>
                                            <span class="text-xs">
                                                <%= match.team_a %>: <%= match.percent_team_a %>% | 
                                                <%= match.team_b %>: <%= match.percent_team_b %>%
                                            </span>
                                        <% } %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" data-field="result">
                                        <% if (match.winner) { %>
                                            <span class="font-medium text-green-600"><%= match.winner %></span>
                                        <% } else { %>
                                            <span class="text-gray-400">Nenastaveno</span>
                                        <% } %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium" data-field="actions">
                                        <div class="flex space-x-2">
                                            <!-- Edit Button -->
                                            <button @click="editMatch(<%= match.id %>, '<%= match.team_a %>', '<%= match.team_b %>', '<%= new Date(match.match_time).toISOString().slice(0, 16) %>')"
                                                    class="text-blue-600 hover:text-blue-900 text-xs">
                                                ‚úèÔ∏è Upravit
                                            </button>

                                            <!-- Delete Button -->
                                            <button @click="deleteMatch(<%= match.id %>, '<%= match.team_a %>', '<%= match.team_b %>')"
                                                    class="text-red-600 hover:text-red-900 text-xs">
                                                üóëÔ∏è Smazat
                                            </button>

                                            <!-- Set Result Buttons -->
                                            <%
                                                const now = new Date();
                                                const matchDate = new Date(match.match_time);
                                                const canEvaluate = !match.winner && match.status !== 'finished' && now >= matchDate;
                                                const isLocked = match.status !== 'upcoming' || (matchDate - now) <= (60 * 60 * 1000);
                                            %>
                                            <% if (canEvaluate) { %>
                                                <div class="border-l pl-2 ml-2 flex space-x-1">
                                                    <button @click="setResult('<%= match.team_a %>')" :disabled="loading"
                                                            class="text-blue-600 hover:text-blue-900 disabled:opacity-50 text-xs">
                                                        üèÜ <%= match.team_a %>
                                                    </button>
                                                    <button @click="setResult('<%= match.team_b %>')" :disabled="loading"
                                                            class="text-red-600 hover:text-red-900 disabled:opacity-50 text-xs">
                                                        üèÜ <%= match.team_b %>
                                                    </button>
                                                </div>
                                            <% } else if (match.winner) { %>
                                                <!-- Reset Result Button for finished matches -->
                                                <div class="border-l pl-2 ml-2">
                                                    <button @click="resetResult(<%= match.id %>, '<%= match.team_a %>', '<%= match.team_b %>')" :disabled="loading"
                                                            class="text-orange-600 hover:text-orange-900 disabled:opacity-50 text-xs">
                                                        üîÑ Reset Result
                                                    </button>
                                                </div>
                                            <% } else if (!match.winner && now < matchDate) { %>
                                                <div class="border-l pl-2 ml-2">
                                                    <span class="text-xs text-gray-500">
                                                        <% if (isLocked) { %>
                                                            üîí Betting closed - Match starts at <%= matchDate.toLocaleTimeString('en-US', {hour: '2-digit', minute:'2-digit'}) %>
                                                        <% } else { %>
                                                            ‚è∞ Evaluation available after match starts
                                                        <% } %>
                                                    </span>
                                                </div>
                                            <% } %>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Leaderboard -->
        <div class="bg-white rounded-lg shadow">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">≈Ωeb≈ô√≠ƒçek u≈æivatel≈Ø</h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">U≈æivatel</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Celkem tip≈Ø</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Spr√°vn√Ωch</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Body</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">√öspƒõ≈°nost</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% leaderboard.forEach((user, index) => { %>
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="text-sm font-medium text-gray-900 mr-2">
                                                #<%= index + 1 %>
                                            </div>
                                            <% if (user.avatar_url) { %>
                                                <img src="<%= user.avatar_url %>" alt="Avatar" class="w-6 h-6 rounded-full mr-2">
                                            <% } %>
                                            <div class="text-sm font-medium text-gray-900">
                                                <%= user.username %>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= user.total_predictions %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= user.correct_predictions %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                        <%= user.total_points %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= user.total_predictions > 0 ? Math.round((user.correct_predictions / user.total_predictions) * 100) : 0 %>%
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </main>

    <!-- Modal System -->
    <div x-data="{
        // Edit Modal
        showEditModal: false,
        editData: { id: null, teamA: '', teamB: '', matchTime: '' },

        // Delete Modal
        showDeleteModal: false,
        deleteData: { id: null, teamA: '', teamB: '' },

        // Notifications
        showNotification: false,
        notificationMessage: '',
        notificationType: 'success',

        // Modal handlers
        openEditModal(data) {
            this.editData = data;
            this.showEditModal = true;
        },

        openDeleteModal(data) {
            this.deleteData = data;
            this.showDeleteModal = true;
        },

        closeModals() {
            this.showEditModal = false;
            this.showDeleteModal = false;
        },

        // Notification handlers
        showSuccess(message) {
            this.notificationMessage = message;
            this.notificationType = 'success';
            this.showNotification = true;
            setTimeout(() => this.showNotification = false, 3000);
        },

        showError(message) {
            this.notificationMessage = message;
            this.notificationType = 'error';
            this.showNotification = true;
            setTimeout(() => this.showNotification = false, 5000);
        },

        // Edit match handler
        async updateMatch() {
            try {
                const response = await fetch(`/admin/matches/${this.editData.id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        teamA: this.editData.teamA,
                        teamB: this.editData.teamB,
                        matchTime: this.editData.matchTime
                    })
                });

                const result = await response.json();
                if (result.success) {
                    this.closeModals();
                    this.showSuccess('Z√°pas byl √∫spƒõ≈°nƒõ upraven!');

                    // Update the match row in the table
                    const matchRow = document.querySelector(`[data-match-id="${this.editData.id}"]`);
                    if (matchRow) {
                        // Update match name
                        const matchNameCell = matchRow.querySelector('[data-field="match-name"]');
                        if (matchNameCell) {
                            matchNameCell.textContent = `${this.editData.teamA} vs ${this.editData.teamB}`;
                        }

                        // Update match time
                        const matchTimeCell = matchRow.querySelector('[data-field="match-time"]');
                        if (matchTimeCell) {
                            const formattedTime = new Date(this.editData.matchTime).toLocaleString('cs-CZ');
                            matchTimeCell.textContent = formattedTime;
                        }

                        // Add a brief highlight effect
                        matchRow.style.transition = 'background-color 0.3s ease';
                        matchRow.style.backgroundColor = '#dcfce7'; // light green
                        setTimeout(() => {
                            matchRow.style.backgroundColor = '';
                        }, 1000);
                    }
                } else {
                    this.showError('Chyba: ' + result.error);
                }
            } catch (error) {
                this.showError('Chyba p≈ôi √∫pravƒõ z√°pasu');
            }
        },

        // Delete match handler
        async confirmDelete() {
            try {
                const response = await fetch(`/admin/matches/${this.deleteData.id}`, {
                    method: 'DELETE'
                });

                const result = await response.json();
                if (result.success) {
                    this.closeModals();
                    this.showSuccess('Match deleted successfully!');

                    // Force page refresh to ensure match is removed from all lists
                    console.log('üîÑ Refreshing page to update match list...');
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    this.showError('Chyba: ' + result.error);
                }
            } catch (error) {
                this.showError('Chyba p≈ôi maz√°n√≠ z√°pasu');
            }
        },

        updateStatsAfterDelete() {
            // Update the total matches count in stats
            const totalMatchesElement = document.querySelector('[data-stat="total-matches"]');
            if (totalMatchesElement) {
                const currentCount = parseInt(totalMatchesElement.textContent);
                totalMatchesElement.textContent = currentCount - 1;
            }
        }
    }"
    @open-edit-modal.window="openEditModal($event.detail)"
    @open-delete-modal.window="openDeleteModal($event.detail)"
    @show-success.window="showSuccess($event.detail)"
    @show-error.window="showError($event.detail)">

        <!-- Edit Match Modal -->
        <div x-show="showEditModal"
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0"
             x-transition:enter-end="opacity-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100"
             x-transition:leave-end="opacity-0"
             class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50"
             @click.self="closeModals()">

            <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                <div class="mt-3">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-medium text-gray-900">Upravit z√°pas</h3>
                        <button @click="closeModals()" class="text-gray-400 hover:text-gray-600">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>

                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">T√Ωm A</label>
                            <input type="text" x-model="editData.teamA"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">T√Ωm B</label>
                            <input type="text" x-model="editData.teamB"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">ƒåas z√°pasu</label>
                            <input type="datetime-local" x-model="editData.matchTime"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                    </div>

                    <div class="flex justify-end space-x-3 mt-6">
                        <button @click="closeModals()"
                                class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
                            Zru≈°it
                        </button>
                        <button @click="updateMatch()"
                                class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                            Ulo≈æit zmƒõny
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Delete Confirmation Modal -->
        <div x-show="showDeleteModal"
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0"
             x-transition:enter-end="opacity-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100"
             x-transition:leave-end="opacity-0"
             class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50"
             @click.self="closeModals()">

            <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                <div class="mt-3 text-center">
                    <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4">
                        <svg class="h-6 w-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                    </div>

                    <h3 class="text-lg font-medium text-gray-900 mb-2">Smazat z√°pas</h3>
                    <p class="text-sm text-gray-500 mb-4">
                        Opravdu chcete smazat z√°pas<br>
                        <strong x-text="deleteData.teamA + ' vs ' + deleteData.teamB"></strong>?<br>
                        <span class="text-red-600">Tato akce je nevratn√°!</span>
                    </p>

                    <div class="flex justify-center space-x-3">
                        <button @click="closeModals()"
                                class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
                            Zru≈°it
                        </button>
                        <button @click="confirmDelete()"
                                class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
                            Smazat z√°pas
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Notification Toast -->
        <div x-show="showNotification"
             x-transition:enter="transition ease-out duration-300 transform"
             x-transition:enter-start="translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2"
             x-transition:enter-end="translate-y-0 opacity-100 sm:translate-x-0"
             x-transition:leave="transition ease-in duration-100"
             x-transition:leave-start="opacity-100"
             x-transition:leave-end="opacity-0"
             class="fixed top-4 right-4 z-50">

            <div :class="notificationType === 'success' ? 'bg-green-500' : 'bg-red-500'"
                 class="max-w-sm w-full shadow-lg rounded-lg pointer-events-auto">
                <div class="p-4">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <svg x-show="notificationType === 'success'" class="h-6 w-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                            <svg x-show="notificationType === 'error'" class="h-6 w-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </div>
                        <div class="ml-3 w-0 flex-1">
                            <p class="text-sm font-medium text-white" x-text="notificationMessage"></p>
                        </div>
                        <div class="ml-4 flex-shrink-0 flex">
                            <button @click="showNotification = false" class="inline-flex text-white hover:text-gray-200 focus:outline-none">
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
